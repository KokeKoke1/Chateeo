@using Chateeo.Models
@using Chateeo.Services
@using Chateeo.Services.Authentication
@using Chateeo.Views
@inject AuthenticationService _authenticationService
@inject NavigationManager navigateMgr

<div class="mt-5 p-4">
    <div class="text-center mb-5 mt-5">
        <h2>Logowanie</h2>
    </div>
    <EditForm Model="Model" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        <hr />
        <div class="form-group mt-4">
            <label>Email Address</label>
            <InputText class="form-control" @bind-Value="Model.Email"></InputText>
        </div>
        <div class="form-group mt-2">
            <label>Password</label>
            <InputText class="form-control" @bind-Value="Model.Password"></InputText>
        </div>
        <div class="mt-5 mb-4">
            <a href="#">Nie pamiętasz hasła?</a>
            <div class="text-center">
                <button type="submit" class="btn btn-primary mt-3 w-100">Login</button>
            </div>
        </div>
        <hr />
        <div class="mt-3 text-center">
            Nie masz konta? <a href="register">Zarejestruj sie.</a>
        </div>
    </EditForm>
</div>
@code {
    private LoginModel Model { get; set; } = new();


    private async Task HandleLogin()
    {
        var response = await _authenticationService.AuthenticationLoginAsync(Model);
        if (response)
        {
            await Application.Current.MainPage.DisplayAlert("Info", "Zalogowano", "Ok");
            App.Current.MainPage = new MainPage();
            Model = new LoginModel();
        }
        else
        {
            await Application.Current.MainPage.DisplayAlert("Info", "Niepoprawny login lub haslo.", "Ok");
            return;
        }
    }
}